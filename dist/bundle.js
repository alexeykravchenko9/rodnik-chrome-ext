!function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:o})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const o=e=>{let t=window.location.href.split("&").filter(t=>t.indexOf(e)>=0?t:"").toString().split("=");return t[t.length-1]},a=()=>{return document.querySelectorAll(".pagination li.active a")[0].innerHTML},l=e=>{if(!(Object.keys(e).length>0))throw new Error("Params aren't is object");for(let t in e)if(e.hasOwnProperty(t))if(e[t].split(" ").length>1){document.querySelectorAll(e[t])[0].addEventListener("click",()=>window.localStorage.clear())}else{document.getElementById(e[t]).addEventListener("change",()=>window.localStorage.clear())}return console.log(e)};var r=class{constructor(){}static getDataTab(){let e=[],t={summ_page:0,savinings:0,allSumm:0,allSavinings:0,startDate:o("startDate"),endDate:o("endDate"),currentPage:`page=${a()}`},n=document.querySelectorAll(".operations-table thead tr th"),l=document.querySelectorAll(".operations-table tbody tr");Object.keys(n).forEach((t,o)=>e.push(n[o].innerText));const r=e.indexOf("Скидка, грн"),i=e.indexOf("Сумма");Object.keys(l).forEach((e,n)=>{t.summ_page+=Math.round(l[n].children[i].innerText),t.savinings+=Math.round(l[n].children[r].innerText)});let{summ_page:c,savinings:s}=t;t.allSumm+=c,t.allSavinings+=s;let{allSumm:g,allSavinings:u}=t;return console.log(`Сумма - ${c} грн`),console.log(`Скидка - ${s} грн`),console.log(`Общая сумма - ${g} грн`),console.log(`Суммарная скидка - ${u} грн`),console.log(t),t}static printHtml(e){let t=parseInt(localStorage.getItem("rodnik-ext-allSavinigs")),n=parseInt(localStorage.getItem("rodnik-ext-allSumm"));const o=document.createElement("div");o.className="b-rodnikStats-bar",o.id="rodnik-container",o.innerHTML=`<p>Общая сумма - ${n} грн</p>\n                         <p>Суммарная скидка - ${t} грн</p>`;const a=document.querySelector("table.operations-table").parentNode,l=document.querySelector("table.operations-table");a.insertBefore(o,l)}};var i=class{constructor(){}static addToStorage(e,t){const{savinings:n,summ_page:o}=e;if(null!==localStorage.getItem("rodnik-ext-allSavinigs")&&null!==localStorage.getItem("rodnik-ext-allSumm")){let e=parseInt(localStorage.getItem("rodnik-ext-allSavinigs")),t=parseInt(localStorage.getItem("rodnik-ext-allSumm"));localStorage.setItem("rodnik-ext-allSavinigs",e+=n),localStorage.setItem("rodnik-ext-allSumm",t+=o)}else localStorage.setItem("rodnik-ext-allSavinigs",n),localStorage.setItem("rodnik-ext-allSumm",o);const a=JSON.stringify(e);this.localKey=t,localStorage.setItem(this.localKey,a)}static getFromStorage(e){return JSON.parse(localStorage.getItem(e))}};const c={datepickerBtn:"#datepicker span.btn",dataRange:"dateRangePreset",locationSelect:"locationSelect",operationType:"operationTypeSelect"};document.querySelectorAll(".operations-table tbody tr").length>0?class{constructor(){}static init(){let e=i.getFromStorage(`rodnik-ext-page=${a()}`);if(null===e){let e=r.getDataTab();i.addToStorage(e,`rodnik-ext-page=${a()}`),r.printHtml(i.getFromStorage(`rodnik-ext-page=${a()}`))}else r.printHtml(e);l(c)}}.init():window.localStorage.clear()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,